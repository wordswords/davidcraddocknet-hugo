<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>~-Backup on DavidCraddock.net</title>
    <link>https://davidcraddock.net/tag/~-backup/</link>
    <description>Recent content in ~-Backup on DavidCraddock.net</description>
    <generator>Hugo -- 0.134.1</generator>
    <language>en</language>
    <lastBuildDate>Tue, 02 Feb 2016 17:28:39 +0000</lastBuildDate>
    <atom:link href="https://davidcraddock.net/tag/~-backup/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fish Shell Scripting</title>
      <link>https://davidcraddock.net/2016/02/02/fish-shell-scripting/</link>
      <pubDate>Tue, 02 Feb 2016 17:28:39 +0000</pubDate>
      <guid>https://davidcraddock.net/2016/02/02/fish-shell-scripting/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://i.telegraph.co.uk/multimedia/archive/01396/fish_1396516c.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;A few months ago I switched across from Bash onto the &lt;a href=&#34;http://fishshell.com/&#34;&gt;Fish shell&lt;/a&gt;, on my main development machine. I can&amp;rsquo;t get enough of its fast autosuggestions and its sane scripting language. Compared to Bash it is very fun to use.&lt;/p&gt;
&lt;p&gt;Today I wrote a script to automate the backup of my development workspace onto a private bitbucket account. Bitbucket is good because it allows unlimited private repositories, but it caps the size of these repos at 2GB max, with some features disabled after 1GB. This means that I want to find out the size of my repo before automatically backing it up. This script does this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to remove nano, vim and other editors&#39; backup files out of a directory tree</title>
      <link>https://davidcraddock.net/2010/03/22/how-to-remove-nano-vim-and-other-editors-backup-files-out-of-a-directory-tree/</link>
      <pubDate>Mon, 22 Mar 2010 20:49:20 +0000</pubDate>
      <guid>https://davidcraddock.net/2010/03/22/how-to-remove-nano-vim-and-other-editors-backup-files-out-of-a-directory-tree/</guid>
      <description>&lt;p&gt;Linux command-line editors such as nano and vim often, by default, create backup files with the prefix of &amp;ldquo;&lt;del&gt;&amp;rdquo;. I.e, if I created a file called /home/david/myfile, then nano would create a backup in /home/david/myfile&lt;/del&gt;. Sometimes it doesn&amp;rsquo;t delete them either, so you&amp;rsquo;re left with a bunch of backup files all over the place, especially if you&amp;rsquo;re editing a lot on a directory tree full of source code.&lt;/p&gt;
&lt;p&gt;Those stray backup files make directory listings confusing, and also add unnecessary weight to the commits on source control systems such as svn, cvs, git.. etc. If you&amp;rsquo;re working on a programming team with other people, then it causes further problems and confusion, because person A&amp;rsquo;s editor can accidentally load person B&amp;rsquo;s backup file.. etc etc. Nightmare.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
