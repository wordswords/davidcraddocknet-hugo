<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Node.js on DavidCraddock.net</title>
    <link>https://davidcraddock.net/category/node.js/</link>
    <description>Recent content in Node.js on DavidCraddock.net</description>
    <generator>Hugo -- 0.134.1</generator>
    <language>en</language>
    <lastBuildDate>Wed, 10 May 2017 13:59:18 +0000</lastBuildDate>
    <atom:link href="https://davidcraddock.net/category/node.js/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Node.js HTTPS server with self-signed certificate creation on openssl 0.9.8zh with node.js 7.10.0</title>
      <link>https://davidcraddock.net/2017/05/10/node-js-https-server-with-self-signed-certificate-creation-on-openssl-0-9-8zh-with-node-js-7-10-0/</link>
      <pubDate>Wed, 10 May 2017 13:59:18 +0000</pubDate>
      <guid>https://davidcraddock.net/2017/05/10/node-js-https-server-with-self-signed-certificate-creation-on-openssl-0-9-8zh-with-node-js-7-10-0/</guid>
      <description>&lt;p&gt;I couldn&amp;rsquo;t find a concise guide to setting this up quickly so thought it was worth a post. To quickly get something working and create a https server using the above versions of openssl and node.js, do the following:&lt;/p&gt;
&lt;p&gt;Â &lt;strong&gt;Generate self-signed server certificate with no password&lt;/strong&gt; &lt;code&gt;sudo openssl req -x509 -newkey rsa:2048 -keyout ./csr.pem -out server.crt -days 3001 -nodes&lt;/code&gt; &lt;strong&gt;Use this node.js code to setup a server quickly&lt;/strong&gt; &lt;code&gt;const https = require(&#39;https&#39;); const fs = require(&#39;fs&#39;); const options = { key: fs.readFileSync(&#39;csr.pem&#39;), cert: fs.readFileSync(&#39;server.crt&#39;) }; https.createServer(options, (req, res) =&amp;gt; { res.writeHead(200); res.end(&#39;hello world\n&#39;); }).listen(8000);&lt;/code&gt; &lt;strong&gt;Go to https://localhost:8000 and accept the certificate, you should see &amp;lsquo;hello world&amp;rsquo;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Haiku Machine</title>
      <link>https://davidcraddock.net/2013/07/27/thehaiku-machine/</link>
      <pubDate>Sat, 27 Jul 2013 02:29:10 +0000</pubDate>
      <guid>https://davidcraddock.net/2013/07/27/thehaiku-machine/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://davidcraddock.net/wp-content/uploads/2013/07/550px-write-a-haiku-poem-intro.jpg&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://davidcraddock.net/wp-content/uploads/2013/07/550px-write-a-haiku-poem-intro.jpg&#34; alt=&#34;550px-Write-a-Haiku-Poem-Intro&#34;  /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I found this &lt;a href=&#34;https://github.com/nathanielksmith/prosaic&#34;&gt;awesome cut-up poetry generator&lt;/a&gt;, which takes the text of famous poets and builds structured poetry out of it. The guy that made it even developed the underlying algorithm as a research project. I have put a version of a free Amazon EC2 instance, wrote a little twitter bot in node.js, and wired the poetry generator with the twitter bot, and now I have this: &lt;a href=&#34;https://twitter.com/haikumachine&#34;&gt;https://twitter.com/haikumachine&lt;/a&gt; - a twitter bot that posts a haiku every five minutes, derived from Dylan Thomas&amp;rsquo;s poetry.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
