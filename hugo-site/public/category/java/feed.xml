<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Java on DavidCraddock.net</title>
    <link>https://davidcraddock.net/category/java/</link>
    <description>Recent content in Java on DavidCraddock.net</description>
    <generator>Hugo -- 0.134.1</generator>
    <language>en</language>
    <lastBuildDate>Sat, 11 Feb 2012 01:36:52 +0000</lastBuildDate>
    <atom:link href="https://davidcraddock.net/category/java/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java 1.6 on RHEL4</title>
      <link>https://davidcraddock.net/2012/02/11/java-1-6-on-rhel4/</link>
      <pubDate>Sat, 11 Feb 2012 01:36:52 +0000</pubDate>
      <guid>https://davidcraddock.net/2012/02/11/java-1-6-on-rhel4/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://davidcraddock.net/wp-content/uploads/2012/02/red-hat-theme-party.jpg&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://davidcraddock.net/wp-content/uploads/2012/02/red-hat-theme-party.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After I wrote a Java application in JDK 1.6, I was stuck for a while when I realised that the target deployment machine was Red Hat Enterprise Linux 4. RHEL4 does not support Java 1.6 in its default configuration.&lt;/p&gt;
&lt;p&gt;Luckily I found this article on the CentOS wiki which included instructions on how to install Java 1.6 on CentOS 4. Remembering that RHEL4 and CentOS 4 are almost identical, I tried the method supplied, and it worked. This is the page with the method:&lt;/p&gt;</description>
    </item>
    <item>
      <title>JSoup Method for Page Scraping</title>
      <link>https://davidcraddock.net/2011/09/07/jsoup-method-for-page-scraping/</link>
      <pubDate>Wed, 07 Sep 2011 18:35:17 +0000</pubDate>
      <guid>https://davidcraddock.net/2011/09/07/jsoup-method-for-page-scraping/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://davidcraddock.net/wp-content/uploads/2011/09/soup.jpg&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://davidcraddock.net/wp-content/uploads/2011/09/soup.jpg&#34; alt=&#34;Soup bowl&#34;  /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m currently in the process of writing a web scraper for the forums on &lt;a href=&#34;http://www.gaiaonline.com/forum&#34; title=&#34;Gaia Online&#34;&gt;Gaia Online&lt;/a&gt;. Previously, I used to use Python to develop web scrapers, with the very handy Python library &lt;a href=&#34;http://www.crummy.com/software/BeautifulSoup/&#34; title=&#34;BeautifulSoup&#34;&gt;BeautifulSoup&lt;/a&gt;. Java has an equivalent called JSoup.&lt;/p&gt;
&lt;p&gt;Here I have written a class which is extended by each class in my project that wants to scrape HTML. This &amp;lsquo;Scraper&amp;rsquo; class deals with the fetching of the HTML and converting it into a JSoup tree to be navigated and have the data picked out of. It advertises itself as a &amp;lsquo;web spider&amp;rsquo; type of web agent and also adds a 0-7 second random wait before fetching the page to make sure it isn&amp;rsquo;t used to overload a web server. It also converts the entire page to ASCII, which may not be the best thing to do for multi-language web pages, but certainly has made the scraping of the English language site Gaia Online much easier.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
