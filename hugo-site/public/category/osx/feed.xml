<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Osx on DavidCraddock.net</title>
    <link>https://davidcraddock.net/category/osx/</link>
    <description>Recent content in Osx on DavidCraddock.net</description>
    <generator>Hugo -- 0.134.1</generator>
    <language>en</language>
    <lastBuildDate>Mon, 04 Apr 2016 11:50:31 +0000</lastBuildDate>
    <atom:link href="https://davidcraddock.net/category/osx/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OSX Fish Functions to open Chrome from the Shell</title>
      <link>https://davidcraddock.net/2016/04/04/osx-fish-functions-to-open-chrome-from-the-shell/</link>
      <pubDate>Mon, 04 Apr 2016 11:50:31 +0000</pubDate>
      <guid>https://davidcraddock.net/2016/04/04/osx-fish-functions-to-open-chrome-from-the-shell/</guid>
      <description>&lt;p&gt;These functions are quite handy, and allow you to do things such as copy and paste errors and google for them without having to manually open a browser. You have to enclose arguments to both functions in single quotes, e.g. &amp;lsquo;chrome &amp;lsquo;&lt;a href=&#34;http://www.google.co.uk&#34;&gt;http://www.google.co.uk&lt;/a&gt;&amp;rsquo; and google &amp;lsquo;one two three four&amp;rsquo;. You should add these to your config file at ~/.config/fish/config.fish and make sure Google Chrome is already installed.&lt;/p&gt;
&lt;p&gt;[code language=&amp;ldquo;bash&amp;rdquo;]
function chrome
/usr/bin/open -a &amp;lsquo;/Applications/Google Chrome.app&amp;rsquo; $argv[1:]
end
function google
/usr/bin/open -a &amp;lsquo;/Applications/Google Chrome.app&amp;rsquo; &amp;ldquo;&lt;a href=&#34;https://www.google.co.uk/search?q=$argv&#34;&gt;https://www.google.co.uk/search?q=$argv&lt;/a&gt;[1]&amp;rdquo;
end
[/code]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Switching Audio between two Soundcards</title>
      <link>https://davidcraddock.net/2015/06/21/switching-audio-between-two-soundcards/</link>
      <pubDate>Sun, 21 Jun 2015 17:55:50 +0000</pubDate>
      <guid>https://davidcraddock.net/2015/06/21/switching-audio-between-two-soundcards/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://davidcraddock.net/wp-content/uploads/2015/06/headphones_accept.png&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://davidcraddock.net/wp-content/uploads/2015/06/headphones_accept.png&#34; alt=&#34;headphones_accept&#34;  /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you have two soundcards - maybe a normal soundcard for your speakers and maybe a headset with its own audio interface - you will want some way of switching all audio between the two. This is an great little open-source tool to do just that. It works on Mac, and Windows 7 up to 10:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://soundswitch.codeplex.com/&#34;&gt;https://soundswitch.codeplex.com/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android Debug Bridge failing to detect emulators under OSX</title>
      <link>https://davidcraddock.net/2013/11/17/android-debug-bridge-failing-to-detect-emulators-under-osx/</link>
      <pubDate>Sun, 17 Nov 2013 02:21:34 +0000</pubDate>
      <guid>https://davidcraddock.net/2013/11/17/android-debug-bridge-failing-to-detect-emulators-under-osx/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://davidcraddock.net/wp-content/uploads/2013/11/android.png&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://davidcraddock.net/wp-content/uploads/2013/11/android.png&#34; alt=&#34;Android&#34;  /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve been working on a project at the BBC where we are using the Android command-line tools from the &lt;a href=&#34;http://developer.android.com/tools/index.html&#34;&gt;Android Developer Tools&lt;/a&gt;, to spin up and terminate series of emulators. I noticed a big problem under OSX where &amp;lsquo;adb devices&amp;rsquo; was failing to register emulators occasionally when we started them up, without any error message, even though they were loaded and quite clearly running in a window on OSX. This was a real problem for our project because we needed absolute parity between emulator process being launched and subsequently being detected by adb.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Monitoring a Slow Internet Connection in OSX</title>
      <link>https://davidcraddock.net/2013/03/01/monitoring-a-slow-internet-connection-in-osx/</link>
      <pubDate>Fri, 01 Mar 2013 01:28:54 +0000</pubDate>
      <guid>https://davidcraddock.net/2013/03/01/monitoring-a-slow-internet-connection-in-osx/</guid>
      <description>&lt;p&gt;I am currently on holiday in Tenerife, and although I really like it here, one thing I do not like is the internet connection we have in our resort. Sometimes networked applications will just hang with no warning and there will be minutes where it&amp;rsquo;s not clear what is going on. Here are some ways you can find a little bit more about what is happening when an application is slow or seems to hang when you have a poor internet connection. Execute the following commands each in a separate terminal window.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Converting a single M2V frame into JPEG under OSX</title>
      <link>https://davidcraddock.net/2012/04/12/converting-a-single-m2v-frame-into-jpeg/</link>
      <pubDate>Thu, 12 Apr 2012 15:20:23 +0000</pubDate>
      <guid>https://davidcraddock.net/2012/04/12/converting-a-single-m2v-frame-into-jpeg/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://davidcraddock.net/wp-content/uploads/2012/04/stainless_steel_number_plate_frame_square.jpg&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://davidcraddock.net/wp-content/uploads/2012/04/stainless_steel_number_plate_frame_square.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I needed to view a single frame of a m2v file that had been encoded by our designers for playing out on TV. The file name was .mpg but in actuality it was a single .m2v frame renamed to be a .mpg. Windows Media Player classic used to display the frame fine when I opened the file normally, under Windows XP. However now I have switched to a Mac, I have found that Quicktime and VLC refused to display the single frame. I couldn&amp;rsquo;t find a video player that would open the single frame. So I resorted to the command line version of ffmpeg, which I installed via macports, to convert this single frame to a jpg file to view as normal. This line worked a treat:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Find large files by using the OSX commandline</title>
      <link>https://davidcraddock.net/2011/02/22/find-large-files-by-using-the-osx-commandline/</link>
      <pubDate>Tue, 22 Feb 2011 00:16:12 +0000</pubDate>
      <guid>https://davidcraddock.net/2011/02/22/find-large-files-by-using-the-osx-commandline/</guid>
      <description>&lt;p&gt;To quickly find large files to delete if you have filled your startup disk, enter this command on the OSX terminal:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo find / -size +500000 -print
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will find and print out file paths to files over 500MB. You can then go through them and delete them individually by typing &lt;strong&gt;rm &amp;ldquo;&lt;!-- raw HTML omitted --&gt;&amp;rdquo;&lt;/strong&gt;, although there is no undelete so make sure you know you won&amp;rsquo;t miss them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Windows 7 Gaming on my Macbook</title>
      <link>https://davidcraddock.net/2010/07/01/running-windows-7-on-my-macbook/</link>
      <pubDate>Thu, 01 Jul 2010 22:50:25 +0000</pubDate>
      <guid>https://davidcraddock.net/2010/07/01/running-windows-7-on-my-macbook/</guid>
      <description>&lt;p&gt;I have a 2006/2007 Core 2 Duo 2.6ghz white macbook, that I use regularly for internet, music, watching films, itunes and integration with my iPhone.&lt;/p&gt;
&lt;p&gt;I wanted to turn my desktop PC into a &amp;lsquo;work only&amp;rsquo; Ubuntu Linux machine, so that I don&amp;rsquo;t get distracted when I&amp;rsquo;m supposed to be doing something else.&lt;/p&gt;
&lt;p&gt;But I still have a lot of PC games that I wanted to play on the Macbook, so I decided to try and setup a windows environment to play games on using Bootcamp 2.0 to create a dual-boot OSX/Windows 7 configuration.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
